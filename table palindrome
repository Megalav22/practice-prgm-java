import java.util.Scanner;

public class tablePalindrome {
	public static void main(String args[]) {
		String str;
		Scanner sc=new Scanner(System.in);
		str=sc.nextLine();
		//int res=findPalindrome(str);
		System.out.println("Longest substring"+findPalindrome(str));
		//System.out.println("longest substring"+res);
	}
public static int findPalindrome(String substr) {
	int i,k,j,start;
	int n=substr.length();
	boolean table[][]=new boolean[n][n];
	int maxlength=1;
	//for single digit
	for(i=0;i<n;i++) {
		table[i][i]=true;
	}
	//for length 2
	 start=0;
	 for(i=0;i<n-1;i++) {
		 if(substr.charAt(i)==substr.charAt(i+1)) {
			 table[i][i+1]=true;
			 start=i;
			 maxlength=2;
		 }
	 }
		//length greater than 2
	for(k=3;k<=n;k++) {
		for(i=0;i<n-k+1;i++) {
			j=i+k-1;
			if(table[i+1][j-1] && substr.charAt(i)==substr.charAt(j)) {
				table[i][j]=true;
			
			if(k>maxlength) {
				start=i;
				maxlength=k;
				//start=i;
			}
		    }
			}
	}
	System.out.println("Substr");
	printingSubstr(substr,start,start+maxlength-1);
	return maxlength;
}
public static void printingSubstr(String substr,int k,int j) {
	System.out.println(substr.substring(k,j+1));
}
}
